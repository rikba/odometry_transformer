<launch>
  <!-- The original odometry source topic -->
  <arg name="source_odometry" default="/msf_core/odometry"/>
  <!-- The desired odometry target topic -->
  <arg name="target_odometry" default="/msf_core/odometry_prism"/>

  <!-- Additionally convert Pose message (PoseWithCovarianceStamped) from the same source to target fragem -->
  <arg name="pose_transform" default="true"/>
  <!-- The original pose source topic -->
  <arg name="source_pose" default="/msf_core/pose"/>
  <!-- The desired pose target topic -->
  <arg name="target_pose" default="/msf_core/pose_prism"/>

  <!-- The original odometry source frame id. -->
  <arg name="source_frame" default="state"/>
  <!-- The desired odometry target frame id. -->
  <arg name="target_frame" default="prism"/>
  <!-- The static calibration from the target frame to the source frame in the target coordinate frame. -->
  <!-- Rotation from target frame to source frame. Quaternion as [x,y,z,w] -->
  <!-- See also https://www.andre-gaschler.com/rotationconverter/ -->
  <arg name="q_TS" default="[0.0, 0.0, 0.0, 1.0]"/>
  <!-- Translation from target frame to source frame. -->
  <arg name="T_r_TS" default="[0.0, 0.0, 0.0]"/>
  <!-- Instead of parametric calibration, the node can lookup the sensor calibration from TF. -->
  <arg name="lookup_tf" default="true"/>
  <!-- Queue size for odometry messages. -->
  <arg name="queue_size" default="1"/>
  <!-- Use tcpNoDelay() to subscribe to source odometry. Uses more CPU! -->
  <!-- This is necessary to avoid message drops at high rate. It is not necessary when using nodelets or low rate odometry. -->
  <arg name="tcp_no_delay" default="true" />

  <node name="odometry_transformer" pkg="odometry_transformer" type="odometry_transformer_node" output="screen">

    <remap from="source_odometry" to="$(arg source_odometry)"/>
    <remap from="target_odometry" to="$(arg target_odometry)"/>

    <remap from="source_pose" to="$(arg source_pose)"/>
    <remap from="target_pose" to="$(arg target_pose)"/>

    <param name="source_frame" value="$(arg source_frame)"/>
    <param name="target_frame" value="$(arg target_frame)"/>

    <rosparam param="q_TS" subst_value="True">$(arg q_TS)</rosparam>
    <rosparam param="T_r_TS" subst_value="True">$(arg T_r_TS)</rosparam>

    <param name="lookup_tf" value="$(arg lookup_tf)"/>
    <param name="queue_size" value="$(arg queue_size)"/>
    <param name="tcp_no_delay" value="$(arg tcp_no_delay)"/>

    <param name="pose_transform" value="$(arg pose_transform)"/>

  </node>
</launch>
